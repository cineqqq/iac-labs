# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Poetry actions
on: [push]

jobs:

  build:
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./example-app
        shell: bash
        
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
      
    - name: Install dependencies
      run: poetry install --no-root --no-interaction

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry/virtualenvs
          ~/AppData/Local/pypoetry/Cache/virtualenvs
        key: ${{ runner.os }}-venv

  lint:
    needs: build
    
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry/virtualenvs
          ~/AppData/Local/pypoetry/Cache/virtualenvs
        key: ${{ runner.os }}-venv
        
    - name: Run lint
      run: ~/.local/bin/poetry run task lint
      
  formatter:
    needs: build
    
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry/virtualenvs
          ~/AppData/Local/pypoetry/Cache/virtualenvs
        key: ${{ runner.os }}-venv
        
    - name: Run formatter
      run: ~/.local/bin/poetry run task formatter

  security:
    needs: build
    
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
      
    - name: Install dependencies
      run: poetry install --no-root --no-interaction

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry/virtualenvs
          ~/AppData/Local/pypoetry/Cache/virtualenvs
        key: ${{ runner.os }}-venv

    - name: Run security
      run: ~/.local/bin/poetry run task security
      
  unittests:
    needs: [lint, formatter, security]
    
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry/virtualenvs
          ~/AppData/Local/pypoetry/Cache/virtualenvs
        key: ${{ runner.os }}-venv

    - name: Run test  
      run: ~/.local/bin/poetry run task test
    
